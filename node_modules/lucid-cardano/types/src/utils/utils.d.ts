import { Core } from "../core/mod.js";
import { Address, AddressDetails, Assets, CertificateValidator, Credential, Datum, DatumHash, KeyHash, MintingPolicy, NativeScript, Network, PolicyId, PrivateKey, RewardAddress, Script, ScriptHash, Slot, SpendingValidator, Unit, UnixTime, UTxO, Validator, WithdrawalValidator } from "../types/mod.js";
import { Lucid } from "../lucid/mod.js";
export declare class Utils {
    private lucid;
    constructor(lucid: Lucid);
    validatorToAddress(validator: SpendingValidator, stakeCredential?: Credential): Address;
    credentialToAddress(paymentCredential: Credential, stakeCredential?: Credential): Address;
    validatorToRewardAddress(validator: CertificateValidator | WithdrawalValidator): RewardAddress;
    credentialToRewardAddress(stakeCredential: Credential): RewardAddress;
    validatorToScriptHash(validator: Validator): ScriptHash;
    mintingPolicyToId(mintingPolicy: MintingPolicy): PolicyId;
    datumToHash(datum: Datum): DatumHash;
    scriptHashToCredential(scriptHash: ScriptHash): Credential;
    keyHashToCredential(keyHash: KeyHash): Credential;
    generatePrivateKey(): PrivateKey;
    generateSeedPhrase(): string;
    unixTimeToSlot(unixTime: UnixTime): Slot;
    slotToUnixTime(slot: Slot): UnixTime;
    /** Address can be in Bech32 or Hex */
    getAddressDetails(address: string): AddressDetails;
    /**
     * Convert a native script from Json to the Hex representation.
     * It follows this Json format: https://github.com/input-output-hk/cardano-node/blob/master/doc/reference/simple-scripts.md
     */
    nativeScriptFromJson(nativeScript: NativeScript): Script;
}
/** Address can be in Bech32 or Hex */
export declare function getAddressDetails(address: string): AddressDetails;
export declare function valueToAssets(value: Core.Value): Assets;
export declare function assetsToValue(assets: Assets): Core.Value;
export declare function utxoToCore(utxo: UTxO): Core.TransactionUnspentOutput;
export declare function coreToUtxo(coreUtxo: Core.TransactionUnspentOutput): UTxO;
export declare function networkToId(network: Network): number;
export declare function fromHex(hex: string): Uint8Array;
export declare function toHex(bytes: Uint8Array): string;
export declare function hexToUtf8(hex: string): string;
export declare function utf8ToHex(utf8: string): string;
export declare function toLabel(num: number): string;
export declare function fromLabel(label: string): number | null;
/**
 * @param name UTF-8 encoded
 */
export declare function toUnit(policyId: PolicyId, name?: string | null, label?: number | null): Unit;
/**
 * Splits unit into policy id, name and label if applicable.
 * name will be returned in UTF-8 if possible, otherwise in Hex.
 */
export declare function fromUnit(unit: Unit): {
    policyId: PolicyId;
    name: string | null;
    label: number | null;
};
/**
 * Convert a native script from Json to the Hex representation.
 * It follows this Json format: https://github.com/input-output-hk/cardano-node/blob/master/doc/reference/simple-scripts.md
 */
export declare function nativeScriptFromJson(nativeScript: NativeScript): Script;
